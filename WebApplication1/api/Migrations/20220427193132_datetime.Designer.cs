// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using db;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20220427193132_datetime")]
    partial class datetime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.3.22175.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.models.Certificate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("birth_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("international_passport")
                        .HasColumnType("text");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.Property<string>("vaccine_type")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Certificates");
                });
#pragma warning restore 612, 618
        }
    }
}
